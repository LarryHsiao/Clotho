buildscript {
    ext.kotlin_version = '1.4.10'
    repositories {
        maven { url = 'https://larryhsiao.com:11000/repository/maven-public/' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "org.jlleitschuh.gradle.ktlint" version "8.2.0"
    id "org.jetbrains.kotlin.jvm" version "1.4.10"
    id "com.larryhsiao.thea" version "1.4.7"
}

System.out.println(thea.indicator.apply(""))

def versionName = thea.version.version().versionName()
apply plugin: 'java-library'

def clothoVersion = versionName

repositories {
    maven { url = 'https://larryhsiao.com:11000/repository/maven-public/' }
}

dependencies {
    testCompile 'junit:junit:4.12'
    compileOnly 'com.google.code.gson:gson:2.8.6'
    compileOnly 'com.squareup.moshi:moshi:1.11.0'
    testRuntimeOnly 'com.squareup.moshi:moshi:1.11.0'
    testRuntimeOnly 'com.google.code.gson:gson:2.8.6'
    testRuntimeOnly 'org.xerial:sqlite-jdbc:3.23.1'
    testRuntimeOnly 'com.h2database:h2:1.4.200'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

compileKotlin {
    kotlinOptions {
        jvmTarget = 1.8
    }
}
afterEvaluate {
    test.dependsOn ktlintCheck
}

jar {
    from sourceSets.main.allSource
}

apply plugin: 'jacoco'
jacocoTestReport {
    reports {
        xml.enabled = true
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

apply plugin: 'maven-publish'
publishing {
    publications {
        maven(MavenPublication) {
            artifact sourcesJar
            artifact javadocJar
            groupId 'com.larryhsiao'
            artifactId 'clotho'
            version clothoVersion
            from components.java
        }
    }
    repositories {
        maven {
            url = 'https://larryhsiao.com:11000/repository/Elizabeth/'
            credentials {
                username(System.getenv("NEXUS_USER_NAME"))
                password(System.getenv("NEXUS_PASSWORD"))
            }
        }
    }
}